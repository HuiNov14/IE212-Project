from flask import Flask, jsonify
from flask_cors import CORS

app = Flask(__name__)
CORS(app)

@app.route('/predict', methods=['GET'])
def predict():
    try:
        # G·ªçi m√¥ h√¨nh   
        # prediction = predict_function()

        #sample data
        sample_data = [
        {"text": "Sp ·ªïn, m·ªói t·ªôi v√¢n tay l√∫c nh·∫≠n l√∫c kh√¥ng, nh√¢n vi√™n nhi·ªát t√¨nh, pin tr√¢u, c·∫£ ƒë√™m t·ª•t 1%",
         "labels": [[0, 5, "GENERAL#POSITIVE"], [15, 41, "FEATURES#NEGATIVE"], [43, 63, "SER&ACC#POSITIVE"], [65, 88, "BATTERY#POSITIVE"]]},
        {"text": "Mua cho m·∫π s√†i n√™n c·ªßng kh√¥ng ƒë√≤i h·ªèi g√¨ nhi·ªÅu, m√°y ƒë·∫πp camera si√™u ·∫£o, th·ª≠ chi·∫øn game c·ªßng ok,pin s√†i dc 2 ng√†y v·ªõi luot wep xem fim, nh√¢n vi√™n tgdd an minh KG ph·ª•c v·ª• qua nhi·ªát t√¨nh cho 5*",
         "labels": [[48, 55, "DESIGN#POSITIVE"], [55, 70, "CAMERA#POSITIVE"], [72, 94, "PERFORMANCE#POSITIVE"], [95, 133, "BATTERY#POSITIVE"], [135, 183, "SER&ACC#POSITIVE"]]},
        {"text": "S·∫£n ph·∫©m qua t·ªá sai m·∫•y l·ªùi li√™n t·ª•c s·∫Øc kh√¥ng v√µ c·ª≠ s·∫Øc th√¨ s·∫Øc kh√¥ng ƒë∆∞·ª£c .ƒëem s·∫Øc m·∫•y kh√°c th√¨ l·∫°i v√¥ bin.c√≤n ƒëem v·ªÅ ƒëung m√†i s·∫Øc kh√¥ng .l√¢u l√¢u m·∫•y s·∫Øc kh√¥ng .t·∫≠t m√¢y kh√≥i ƒë√¥ng l·∫°i th√¨ s·∫Øc v√¥.ƒëem l√™n th·∫ø gi·ªõi g·ªâ ƒë·ªìng th√¨ k√™u ƒëem l√™n h√†ng b·∫°o h√†nh .m√¨nh ƒë√≥ to√†n di·ªán m·∫•y xanh v·ªõi th·ªùi gi·ªõi g·ªâ ƒë·ªìng .m√£ l·ª±c n√†y b·∫°o h√†nh m·∫•y c·ªßa tg ƒë·ªìng k·∫ªm l√†m .m√¨nh kh√¥ng ·ªßng h·ªô n·ªØa ƒë√¢u",
         "labels": [[0, 15, "GENERAL#NEGATIVE"], [37, 138, "BATTERY#NEGATIVE"], [196, 372, "SER&ACC#NEGATIVE"]]},
        {"text": "M√¨nh mua m√°y h√¥m 3/5 ·ªü TGDƒê Nguy·ªÖn Th·ªã T√∫. Nh√¢n vi√™n t∆∞ v·∫•n nhi·ªát t√¨nh, khs ok. C·∫£m nh·∫≠n c·ªßa m√¨nh v·ªÅ m√°y kh√° m∆∞·ª£t, cam ƒë·∫πp, pin kh√° ·ªïn m√¨nh s·ª≠ d·ª•ng ch∆°i game (LQMB,PUBG,...) v√† l∆∞·ªõt mxh kh√° nhi·ªÅu nh∆∞ng t·ªõi cu·ªëi ng√†y pin v·∫´n c√≤n h∆°n 30%. N√≥i chung l√† m√°y kh√° t√¥t, ·ªïn trong t·∫ßm gi√°, tuy nhi√™n l√¢u l√¢u c√≥ h∆°i kh·ª±ng 1 ch√∫t nh∆∞ng t·∫ßn su·∫•t kh√¥ng nhi·ªÅu. √ù ki·∫øn c·ªßa ri√™ng m√¨nh c·∫£m ∆°n mn",
         "labels": [[43, 78, "SER&ACC#POSITIVE"], [80, 113, "PERFORMANCE#POSITIVE"], [115, 122, "CAMERA#POSITIVE"], [124, 235, "BATTERY#POSITIVE"], [237, 265, "GENERAL#POSITIVE"], [291, 345, "PERFORMANCE#NEUTRAL"]]},
        {"text": "M√°y x√†i t·ªët, m∆∞·ª£t, s·∫°c r·∫•t nhanh, pin tr√¢u, m√¨nh d√πng t√°c v·ª• b√¨nh th∆∞·ªùng (zalo, fb, youtube) th√¨ ƒë∆∞·ª£c 1 ng√†y r∆∞·ª°i. Camera th√¨ ƒë·∫πp ·∫£o üòÅ.",
         "labels": [[0, 11, "GENERAL#POSITIVE"], [13, 17, "PERFORMANCE#POSITIVE"], [19, 32, "BATTERY#POSITIVE"], [34, 42, "BATTERY#POSITIVE"], [115, 132, "CAMERA#POSITIVE"]]},
        {"text": "M√¨nh m·ªõi mua. m√¨nh th·∫•y m·∫´u ƒë·∫πp pin tr√¢u c·∫£m ·ª©ng m∆∞·ª£t ƒë∆∞·ª£c em nh√¢n vi√™n ƒêMX t∆∞ v·∫•n r·∫•t nhi·ªát t√¨nh",
         "labels": [[19, 31, "DESIGN#POSITIVE"], [32, 40, "BATTERY#POSITIVE"], [41, 53, "FEATURES#POSITIVE"], [54, 97, "SER&ACC#POSITIVE"]]},
        {"text": "M√°y S√†i r·∫•t √™m m∆∞·ª£t m√† c√≤n th·∫Øc m·∫Øc iphone7 plus c√≥ ch·ªëng n∆∞·ªõc ko b·ªã r∆°i xu·ªëng n∆∞·ªõc 1 l·∫ßn r·ªìi v√† ko sao c·∫£",
         "labels": [[0, 22, "PERFORMANCE#POSITIVE"]]}
        ]
        
        response = sample_data

        return jsonify(response)
    except Exception as e:
        return jsonify({"error": str(e)})

if __name__ == '__main__':
    app.run(debug=True)
